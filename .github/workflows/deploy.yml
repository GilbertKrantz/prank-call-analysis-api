# .github/workflows/deploy-fastapi.yml
name: Deploy FastAPI App

on:
  push:
    branches: [master]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME_LOWER: ${{ github.repository.lower() }}
  CONTAINER_NAME: fastapi-api

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER}}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} <<EOF
            set -e

            export REGISTRY="${{ env.REGISTRY }}"
            export IMAGE_NAME_LOWER="${{ env.IMAGE_NAME_LOWER}}"
            export TAG="${{ github.sha }}"
            export CONTAINER_NAME="${{ env.CONTAINER_NAME }}"
            export GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}"

            mkdir -p ~/fastapi-app
            cd ~/fastapi-app

            cat > docker-compose.yml <<EOL
            version: '3.8'
            services:
              fastapi:
                image: \${REGISTRY}/\${IMAGE_NAME_LOWER}:\${TAG}
                container_name: \${CONTAINER_NAME}
                ports:
                  - "8000:8000"
                environment:
                  - GEMINI_API_KEY=\${GEMINI_API_KEY}
                restart: unless-stopped
                healthcheck:
                  test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
                  interval: 30s
                  timeout: 10s
                  retries: 3
                logging:
                  driver: "json-file"
                  options:
                    max-size: "10m"
                    max-file: "3"
          EOL

            echo "${{ secrets.GITHUB_TOKEN }}" | docker login \$REGISTRY -u ${{ github.actor }} --password-stdin

            docker pull \$REGISTRY/\$IMAGE_NAME_LOWER:\$TAG

            docker stop \$CONTAINER_NAME || true
            docker rm \$CONTAINER_NAME || true

            docker compose up -d

            # Wait for health check
            timeout=30
            while [ \$timeout -gt 0 ]; do
              if docker compose ps | grep -q "healthy"; then
                echo "Container is healthy"
                break
              fi
              sleep 5
              timeout=\$((timeout - 5))
            done

            docker image prune -f
            echo "Deployment completed successfully"
          EOF
